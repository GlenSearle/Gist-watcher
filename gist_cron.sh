#!/bin/sh
# A script that adds a new cron job that tests for a new Gisthub Gist post
# On detecting a post the cron job runs a user specified task.

# Written by Glen Searle
# 14th August 2017

function_name () {
	#This function takes a Github username from the user.
	echo "What is the GitHub username to monitor?"
	read -p "Username: " git_user
}

function_that_gets_a_frequency () {
	# I'm just giving the options of hourly or daily. To avoid having to ask about, and process, comples cron time formats.
echo "	Do you want this checked daily or hourly? Default it hourly."
	read -p "[hourly]: " frequency
	echo  ${frequency} | grep d > /dev/null && hours_ago="1" || hours_ago="24"
	echo  ${frequency} | grep d > /dev/null && frequency="daily" || frequency="hourly"
	echo ${frequency}
	echo 
	
}


function_that_writes_a_cron_file () {


#################################################################
# This block of shell script in the function is what will be in the cron job.

cat <<EOF | sudo tee /etc/cron.${frequency}/gist-check-for-${git_user}
#!/bin/sh
# Cron job generated by script.
gist_output=\$(curl -s -X GET \$(date +https://api.github.com/users/${git_user}/gists?since=%Y-%m-%dT%H:00:00Z -d  "${hours_ago} hours ago") )

if [  \$(echo \${gist_output} | wc --chars) =  4 ]
  then
    # Something that should run if there is no new post.
    date +%Y-%m-%dT%H:00:00Z\ Nothing\ new\ found. >> /var/log/glensearle.gist.log
  else
    # Someothing should go here that is run when there is a new post.
    date +%Y-%m-%dT%H:00:00Z\ This\ is\ new. >> /var/log/glensearle.gist.log
    echo \${gist_output} >> /var/log/glensearle.gist.log
fi
EOF

sudo chmod +x /etc/cron.${frequency}/gist-check-for-${git_user}
}


################################################################


function_name
while $( curl -s -X GET https://api.github.com/users/${git_user}/gists | grep "Not Found" > /dev/null ); do
	echo "User ${git_user} was not found on Github."
	echo 
        function_name
done

function_that_gets_a_frequency

echo "A new cron job will now be created in /etc/cron.${frequency}/gist-check-for-${git_user} You may be asked for your sudo password to allow this."
echo
function_that_writes_a_cron_file
